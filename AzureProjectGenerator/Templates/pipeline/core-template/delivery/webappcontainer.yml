parameters:
    # environment do Azure DevOps com as regras de deploy
    - name: environment
      type: string

    # Subscription do Azure
    - name: azSubscription
      type: string

    # Nome do WebApp
    - name: azWebApp
      type: string

    # Containers docker
    - name: containers
      type: string

    # Define qual o job, stage precisa ocorrer com sucesso antes de dexecutar esse job
    - name: depends
      default: null
      type: object

    # Define parametros do settings para passar ao ambiente do azure. ex: -ASPNETCORE_ENVIRONMENT Staging
    - name: appSettings
      default: ""
      type: string

    # Define parametros do settings para passar ao ambiente do azure. ex: -linuxFxVersion: node|6.11
    - name: configurationSettings
      default: ""
      type: string

    # Injetar services/containers no pipeline
    - name: services
      default: ""
      type: object

    # Injetar instrumentationKey do Application Insight
    - name: instrumentationKey
      default: ""
      type: string

jobs:
    - deployment:
      displayName: 'WebAppForContainerDeployment'
      ${{ if parameters.services }}:
        services:
          ${{parameters.services}}
      environment: '${{parameters.environment}}'
      dependsOn: ${{parameters.depends}}
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
            deploy:                              
                steps:
                # - task: AzureWebAppContainer@1
                #   displayName: Publish 
                #   inputs:
                #     azureSubscription: '${{parameters.azSubscription}}'
                #     appName: '${{parameters.azWebApp}}'
                #     containers: '${{parameters.containers}}'
                #     appSettings: ${{parameters.appSettings}}
                #     configurationSettings: ${{parameters.configurationSettings}}
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: '${{parameters.azSubscription}}'
                    appType: 'webAppLinux'
                    appName: '${{parameters.azWebApp}}'
                    package: '$(Pipeline.Workspace)/drop/'
                    runtimeStack: 'DOCKER|${{parameters.containers}}'
                    appSettings: ${{parameters.appSettings}}
                    configurationSettings: ${{parameters.configurationSettings}}

    - job: Alerts
      pool:
        vmImage: 'ubuntu-latest'
      
      steps:
        - template: alert.yml
          parameters:
            azureSubscriptionAI: ${{ parameters.azSubscription }}
            instrumentationKey: ${{ parameters.instrumentationKey }}
